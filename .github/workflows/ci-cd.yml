name: CI/CD

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'  # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    - name: Set up uv
      uses: astral-sh/setup-uv@v5
      with:
        version: "0.6.3"
    - name: Install dependencies
      run: uv sync
    - name: Run lint checks
      run: uv run ruff check .
    - name: Run tests
      run: uv run pytest
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: test-results

  create-release:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - uses: actions/checkout@v3
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  release:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    - name: Set up uv
      uses: astral-sh/setup-uv@v1
    - name: Install dependencies
      run: |
        uv pip install --system -e ".[dev]"
        uv pip install build twine
    - name: Build package
      run: uv run python -m build
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        uv run twine upload dist/*
